generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  email     String?   @unique
  avatar    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]

  @@map("users")
}

model Persona {
  id             String          @id @default(cuid())
  username       String          @unique
  imageUrl       String?
  friendsIds     String[]
  isFriendOfUser Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  headerColor    String?
  description    String?
  directMessages DirectMessage[]
  messages       Message[]

  @@map("personas")
}

model Group {
  id              String    @id @default(cuid())
  name            String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  participantIds  String[]
  lastInteraction DateTime?
  messages        Message[]

  @@map("groups")
}

model DirectMessage {
  id              String    @id @default(cuid())
  personaId       String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  lastInteraction DateTime?
  persona         Persona   @relation(fields: [personaId], references: [id], onDelete: Cascade)
  messages        Message[]

  @@map("direct_messages")
}

model Message {
  id              String         @id @default(cuid())
  content         String
  userId          String?
  personaId       String?
  groupId         String?
  directMessageId String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  directMessage   DirectMessage? @relation(fields: [directMessageId], references: [id], onDelete: Cascade)
  group           Group?         @relation(fields: [groupId], references: [id], onDelete: Cascade)
  persona         Persona?       @relation(fields: [personaId], references: [id])
  user            User?          @relation(fields: [userId], references: [id])

  @@map("messages")
}
